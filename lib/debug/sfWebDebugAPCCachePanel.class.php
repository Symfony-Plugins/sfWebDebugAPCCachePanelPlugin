<?php

/**
 * sfWebDebugAPCCAchePanelPlugin panel
 * 
 * @package     sfWebDebugAPCCAchePanelPlugin
 * @subpackage  panel
 * @author      Davide Borsatto <davide.borsatto@gmail.com>
 * @since       2009-12-12
 * @version     svn:$Id$ $Author$
 */
class sfWebDebugAPCCachePanel extends sfWebDebugPanel
{

  /**
   * Returns the title to display in the toolbar
   *
   * @return string
   */
  public function getTitle()
  {
    return 'cache';
  }

  /**
   * Returns the title of the panel
   *
   * @return string
   */
  public function getPanelTitle()
  {
    return 'Cache';
  }

  /**
   * Returns the content of the panel (empty)
   *
   * @return string
   */
  public function getPanelContent()
  {
    $this->setStatus(sfLogger::INFO);

    $cache = new sfAPCCache();

    // Since sfAPCCache does not provide a method to fetch all the cached items,
    // I manually load them using apc_cache_info
    $info = apc_cache_info('user');
    $list = is_array($info['cache_list']) ? $info['cache_list'] : array();

    $prefix = $cache->getOption('prefix');
    $length = strlen($prefix);
    $items = array();

    foreach ($list as $item)
    {
      // Checks if the item has the prefix generated by symfony
      if (substr($item['info'], 0, $length) == $prefix)
      {
        $key = substr($item['info'], $length);
        $cached = $cache->get($key);

        $type = gettype($cached);
        if ($type == 'object')
        {
          $type .= sprintf(' (class %s)', get_class($cached));
        }

        $items[] = array
        (
          'key'        => $key,
          'type'       => $type,
          'hits'       => $item['num_hits'],
          'memory'     => $item['mem_size'],
          'created_at' => $item['creation_time']
        );
      }
    }

    usort($items, array('sfWebDebugAPCCachePanel', 'sortCacheItems'));

    $panel = <<<EOF
<table class="sfWebDebugLogs" style="width: 450px">
  <thead>
    <tr>
      <th>name</th>
      <th>type</th>
      <th>hits</th>
      <th>memory</th>
      <th>creation date</th>
    </tr>
  </thead>
  <tbody>
EOF;

    foreach ($items as $item)
    {
      $panel .= sprintf(
'    <tr>
       <td>%s</td>
       <td class="sfWebDebugLogType">%s</td>
       <td>%d</td>
       <td>%d</td>
       <td>%s</td>
     </tr>
', $item['key'], $item['type'], $item['hits'], $item['memory'], date('Y/m/d - H:i:s', $item['created_at']));
    }
    $panel .= '  </tbody>
</table>
';

    return $panel;
  }

  /**
   * Callback for the usort function used to sort the cached items list
   *
   * @param array $item1
   * @param array $item2
   *
   * @return integer
   */
  static public function sortCacheItems($item1, $item2)
  {
    return $item1['key'] < $item2['key'] ? -1 : 1;
  }

  /**
   * Listener to the event dispatcher event
   *
   * @param sfEvent $event
   */
  static public function addToToolbar(sfEvent $event)
  {
    $event->getSubject()->setPanel('cache', new self($event->getSubject()));
  }

}
